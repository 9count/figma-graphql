{"version":3,"sources":["webpack:///../docs/examples.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,mMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,gIACA,iBAAQ,CACN,GAAM,aADR,aAGA,8BACE,iBAAGC,WAAW,cAAd,4CAEF,+GACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8fAuBL,8BACE,iBAAGA,WAAW,cAAd,oGAEF,kGACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6PAiBL,iBAAQ,CACN,GAAM,cADR,cAGA,8BACE,iBAAGA,WAAW,cAAd,kFAEF,wEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,ySAiBL,iBAAQ,CACN,GAAM,oBADR,oBAGA,8BACE,iBAAGA,WAAW,cAAd,8GAEF,gHACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,khB,iMA2BTJ,EAAWK,gBAAiB","file":"component---docs-examples-mdx-e47d5b42e45e8df92096.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/braposo/figma-graphql/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"practical-examples\"\n    }}>{`Practical examples`}</h1>\n    <p>{`Let's look at some practical examples in the perspective of designers, developers and product managers.`}</p>\n    <h2 {...{\n      \"id\": \"designers\"\n    }}>{`Designers`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Get all text styles in a specific frame`}</p>\n    </blockquote>\n    <p>{`This example tries to follow the structure of the file to get the information we need.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gql\"\n      }}>{`{\n    file(id: \"fileID\") {\n        pages(name: \"styles\") {\n            frames(name: \"typography\") {\n                groups {\n                    name\n                    texts {\n                        name\n                        styles {\n                            fontSize\n                            fontFamily\n                            fontWeight\n                            ...\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Get the background colours of all the global styles to update their Design System documentation`}</p>\n    </blockquote>\n    <p>{`We can now use the power of the shortcuts to get that information easily.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gql\"\n      }}>{`{\n    file(id: \"fileID\") {\n        styles(type: FILL) {\n            name\n            styles {\n                color {\n                    r\n                    g\n                    b\n                }\n            }\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"developers\"\n    }}>{`Developers`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Export all icons in a design document to generate up-to-date React components`}</p>\n    </blockquote>\n    <p>{`We want to export the components in SVG format.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gql\"\n      }}>{`{\n    file(id: “fileID”) {\n        pages(name: \"Icons\") {\n            components {\n                name\n                size {\n                    width\n                    height\n                }\n                export(params: { format: svg })\n            }\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"product-managers\"\n    }}>{`Product Managers`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Get the screenshots of the prototype screens for a few different features to present at a product meeting`}</p>\n    </blockquote>\n    <p>{`We need to go through all the files inside the team projects so we'll be using aliases.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gql\"\n      }}>{`{\n    projects(teamId: \"teamID\") {\n        featureA: files(name: \"Feature A\") {\n            pages(name: \"Prototype\") {\n                frames {\n                    name\n                    export(params: { format: jpg })\n                }\n            }\n        }\n        featureB: files(name: \"Feature B\") {\n            pages(name: \"Prototype\") {\n                frames {\n                    name\n                    export(params: { format: jpg })\n                }\n            }\n        }\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}